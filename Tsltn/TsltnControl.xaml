<UserControl x:Class="Tsltn.TsltnControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Tsltn"
             xmlns:r ="clr-namespace:Tsltn.Resources"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:cmd ="clr-namespace:Tsltn.Commands"
             xmlns:models="clr-namespace:FolkerKinzel.Tsltn.Models;assembly=FolkerKinzel.Tsltn.Models"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="WhiteSmoke"
             Padding="5,0"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             FontSize="16"
             TextOptions.TextFormattingMode="Ideal"
             Loaded="TsltnControl_Loaded" 
             Unloaded="TsltnControl_Unloaded" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/StandardResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="HeaderTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Style.Setters>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="White"/>
                </Style.Setters>
            </Style>

            <!--
            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Style.Setters>
                    <Setter Property="Padding" Value="7,2,7,2"/>
                    <Setter Property="MinWidth" Value="90"/>
                </Style.Setters>
            </Style>
            -->


            <Style x:Key="headerBorder" TargetType="Border">
                <Setter Property="Background" Value="Black"/>
            </Style>

            <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                <Style.Setters>
                    <Setter Property="Padding" Value="7,2,7,2"/>
                </Style.Setters>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="BrowseBack" CanExecute="PreviousPage_CanExecute" Executed="PreviousPage_Executed"/>
        <CommandBinding Command="BrowseForward" CanExecute="NextPage_CanExecute" Executed="NextPage_Executed"/>
        <CommandBinding Command="BrowseHome" CanExecute="PreviousPage_CanExecute" Executed="BrowseHome_Executed"/>
        <CommandBinding Command="{x:Static cmd:TsltnControlCommand.CopyXml}" Executed="CopyXml_Executed"/>
        <CommandBinding Command="{x:Static cmd:TsltnControlCommand.BrowseAll}" Executed="BrowseAll_Executed"/>
        <CommandBinding Command="{x:Static cmd:TsltnControlCommand.NextToTranslate}" CanExecute="NextToTranslate_CanExecute" Executed="NextToTranslate_Executed"/>
    </UserControl.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="3*" MinHeight="170"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="1*" MinHeight="50"/>
        </Grid.RowDefinitions>

        
        
        
        <DockPanel Grid.ColumnSpan="2">
            <local:NavigationUserControl x:Name="NavCtrl" DockPanel.Dock="Right" Margin="5"/>

            <Grid DockPanel.Dock="Left" VerticalAlignment="Center" Validation.Error="Language_Error">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Style.Setters>
                            <Setter Property="MinWidth" Value="60"/>
                            <Setter Property="Margin" Value="5,0,5,0"/>
                        </Style.Setters>
                    </Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Style.Setters>
                            <Setter Property="Margin" Value="5,0,5,0"/>
                        </Style.Setters>
                    </Style>
                </Grid.Resources>
                <Label Content="{x:Static r:Res.SourceLanguage}"/>
                <Label Grid.Row="1" Content="{x:Static r:Res.TargetLanguage}" VerticalAlignment="Top"/>
                <TextBox Name="_tbSourceLanguage" Grid.Column="1" 
                         Text="{Binding SourceLanguage, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}"
                         VerticalAlignment="Center"
                         AcceptsReturn="False" AcceptsTab="False" Padding="3,0"/>
                <TextBox Name="_tbTargetLanguage" Grid.Column="1" Grid.Row="1"
                         Text="{Binding TargetLanguage, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}"
                         VerticalAlignment="Top"
                         AcceptsReturn="False" AcceptsTab="False" Padding="3,0"/>

                <TextBlock Grid.Column="2" DockPanel.Dock="Left" VerticalAlignment="Center" Text="{x:Static r:Res.SourceFile}"/>
                <TextBlock Grid.Column="2" Grid.Row="1" DockPanel.Dock="Left" VerticalAlignment="Top" Text="{x:Static r:Res.NodePath}"/>
                <TextBlock Grid.Column="3" TextTrimming="CharacterEllipsis" Text="{Binding Document.SourceDocumentFileName, Mode=OneWay}" VerticalAlignment="Center"/>


                <ScrollViewer Grid.Column="3" Grid.Row="1" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Visible" CanContentScroll="True">
                    <TextBlock Text="{Binding CurrentNode.NodePath}" VerticalAlignment="Top"/>
                </ScrollViewer>
            </Grid>
        </DockPanel>




        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
           
            <Border Style="{StaticResource headerBorder}">
                <TextBlock  Style="{StaticResource HeaderTextBlock}" Text="{x:Static r:Res.Original}" VerticalAlignment="Center"/>
            </Border>

            <Button Name="_btnNextToTranslate" Command="{x:Static cmd:TsltnControlCommand.NextToTranslate}" Height="{Binding ElementName=_btnReset, Path=ActualHeight}"
                    HorizontalAlignment="Right" Content="{x:Static r:Res.NextToTranslate}" FontSize="12">
            </Button>

            <TextBox Name="_tbOriginal" Grid.Row="1" DockPanel.Dock="Top" Text="{Binding CurrentNode.InnerXml, Mode=OneWay}" AcceptsReturn="True"
                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.CanContentScroll="True"
                 TextWrapping="Wrap" Padding="10" FontSize="22" Background="WhiteSmoke" />

            <Grid Grid.Row="2" FocusManager.IsFocusScope="False">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                    <Button Name="_btnFirstNode" Command="BrowseHome" Content="&lt;&lt;" Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}">
                        <Button.Style>
                            <Style TargetType="Button"></Style>
                        </Button.Style>
                    </Button>
                    <Button Name="_btnPrevious" Command="BrowseBack" Content="{x:Static r:Res.Previous}"/>
                </StackPanel>
                <Button Command="{x:Static cmd:TsltnControlCommand.CopyXml}" Content="{x:Static r:Res.CopyAll}" HorizontalAlignment="Center"/>
                <Button Name="_btnNext" DockPanel.Dock="Right" Command="BrowseForward" HorizontalAlignment="Right" Content="{x:Static r:Res.Next}"/>
            </Grid>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Border>
                <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource headerBorder}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasTranslation, Mode=OneWay}" Value="False">
                                <DataTrigger.Setters>
                                    <Setter Property="Background" Value="Gray"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <TextBlock  Text="{x:Static r:Res.Translation}" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource HeaderTextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasTranslation, Mode=OneWay}" Value="False">
                                    <DataTrigger.Setters>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Border>
            <Button Name="_btnReset" HorizontalAlignment="Right"
                Content="{x:Static r:Res.Reset}" Click="BtnReset_Click" IsEnabled="{Binding HasTranslation}" />

            <TextBox Name="_tbTranslation" Grid.Row="1" Text="{Binding Translation, UpdateSourceTrigger=PropertyChanged}"
                 GotKeyboardFocus="TbTranslation_GotKeyboardFocus"
                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.CanContentScroll="True"
                 Padding="10" FontSize="22" Background="WhiteSmoke" TextWrapping="Wrap"  AcceptsReturn="True" />



            <Button Name="_btnBrowseAll" Grid.Row="2" HorizontalAlignment="Center" Command="{x:Static cmd:TsltnControlCommand.BrowseAll}"
                Content="{x:Static r:Res.BrowseAll}"></Button>
        </Grid>
        

        
        <!--
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled" CanContentScroll="True">
            <TextBlock Text="{Binding CurrentNode.InnerXml}" TextWrapping="WrapWithOverflow" Padding="10" FontSize="22"/>
        </ScrollViewer>
        -->

        

        

        <GridSplitter Grid.Row="2" Grid.ColumnSpan="2" Height="5" HorizontalAlignment="Stretch" ResizeDirection="Rows" ResizeBehavior="PreviousAndNext" Background="CornflowerBlue"/>

        <ListBox Grid.Row="3" Grid.ColumnSpan="2" ItemsSource="{Binding Errors}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Focusable="False">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="Focusable" Value="False"/>
                    <EventSetter Event="MouseDoubleClick" Handler="DataError_MouseDoubleClick"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Width="16" Height="16" VerticalAlignment="Top" Margin="5">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Setters>
                                        <Setter Property="Source" Value="pics/StatusCriticalError_16x.png"/>
                                        <Setter Property="Focusable" Value="False"/>
                                    </Style.Setters>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Level}" Value="{x:Static models:ErrorLevel.Warning}">
                                            <Setter Property="Source" Value="pics/StatusWarning_16x.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Level}" Value="{x:Static models:ErrorLevel.Information}">
                                            <Setter Property="Source" Value="pics/StatusInformation_16x.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock Grid.Column="1" Text="{Binding Message}" TextWrapping="WrapWithOverflow" Focusable="False"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>


    </Grid>
</UserControl>
